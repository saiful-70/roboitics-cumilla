{
  "Math": [
    {
      "Algebra": {
        "Algebraic Equation": "",
        "Algebraic Manipulation": "",
        "Set": "",
        "Function": "",
        "Series": "",
        "Inequality": ""
      },
      "Combinatorics": {
        "Counting": "",
        "Permutation": "",
        "Combination": "",
        "Probability": ""
      },
      "Number Theory": {
        "Divisibility": ["Prime Number", "Composite Number", "Parity"],
        "GCD": "",
        "LCM": "",
        "Co-prime": ""
      },
      "Geometry": {
        "Points,Lines,Planes": "",
        "Angles": "",
        "Perpendicular and Parallel": "",
        "Triangles": "",
        "Quadrilaterals": "",
        "Circles": "",
        "Area": ""
      }
    }
  ],

  "C Programming": [
    {
      "C Programming": {
        "Introduction": [
          "History",
          "Basic Syntax",
          "Identifiers",
          "Keywords",
          "Variable"
        ],
        "Data Types": "",
        "Operators": "",
        "User Input": "",
        "Increment / Decrement": "",
        "Conditional Logic": ["if/else", "if else ladder", "nested if else"],
        "Loop": ["for loop", "while loop", "break and continue"],
        "Array": ["One dimensional array", "Multidimensional array"],
        "Function": [
          "C Programming Function",
          "User Define Function",
          "Recursive Function"
        ],
        "String": ""
      }
    }
  ],
  "Electronics": [
    {
      "Basic Electronics": "",
      "Various Electronics Component Introduction": "",
      "Logic Gate": "",
      "Practically Circuit Design": "",
      "Power Source": "",
      "Android Control Car Circuit": "",
      "Avoid Obstacles Car Circuit Design": ""
    }
  ],

  "Arduino Programming": [
    {
      "Programming Concept": {
        "How a Computer Program Works?": "",
        "Input-Processing-Output": "",
        "Algorithm-Flowchart": ""
      },
      "Data Types": "",
      "Variable": "",
      "Operator": "",
      "Bit,Byte": "",
      "Introduction to Arduino UNO": {
        "Pin": "",
        "I/O Ports": "",
        "PWM": ""
      },

      "First Program": {
        "Setup,Loop": "",
        "PinMode,Read,Write,Delete": "",
        "LED Blinking": ""
      },
      "Conditional Logic": {
        "How to make a decision": "",
        "Project on if statement": ""
      },
      "Loop": {
        "for loop": "",
        "while loop": "",
        "Project on loop statement": ""
      },
      "Sensor": {
        "Introducing with Sensor ": [
          "LDR",
          "Ultrasonic",
          "Temperature",
          "IR",
          "Obstacle",
          "Rain",
          "Pir"
        ],
        "Read data from Sensor": "",
        "Project with Sensor": ""
      },
      "Motor Driven": {
        "Clockwise/Anticlockwise Rotation": "",
        "Controlling Motor Speed": "",
        "Project with Motor": "",
        "Serial Communication": ["Serial read & write"],
        "Bluetooth Module": ""
      }
    }
  ],

  "Competitive Programming": [
    {
      "Searching": {
        "Linear Search": "",
        "Binary Search": ""
      },
      "Sorting": {
        "Bubble Sort": "",
        "Selection Sort": "",
        "Insertion Sort": "",
        "Counting Sort": "",
        "Merge Sort": ["Divide and Conquer"]
      },
      "Linear DSA": {
        "Arrays": "",
        "Linked list": ["Stack", "Queue", "Deque"]
      },
      "Tree Based DSA(Non-linear)": {
        "Basic of tree types": [
          "Binary",
          "Full Binary",
          "Perfect Binary",
          "Complete Binary"
        ],
        "Tree Traversal": ["Inorder", "Preorder", "Post-order"]
      },
      "Graph Based DSA(Non-linear)": {
        "Basics": ["Node", "Edge", "Direction", "Weight"],
        "Adjacency List": "",
        "Adjacency Matrix": "",
        "DFS": "",
        "BFS": ""
      }
    }
  ],

  "Dynamic Programming": [
    {
      "What is DP and Why?": "",
      "Fibonacci Series": "",
      "Sum of Subset": "",
      "Coin Change": "",
      "Longest Common Subsequence": "",
      "Longest Increasing Subsequence": "",
      "0-1 Knapsack": ""
    }
  ],

  "Introduction with C++": [
    {
      "STL": {
        "Set": "",
        "Map": "",
        "Sort": "",
        "Swap": "",
        "Count": "",
        "Upperbound": "",
        "Lowerbound": "",
        "Pair": "",
        "String function": ""
      }
    }
  ]
}
